(ns zo3-ja\state\tests
  (:require phel\test :refer [deftest is])
  (:require zo3-ja\config)
  (:require zo3-ja\state))

(deftest state-test
  (let [env {"XDG_CONFIG_HOME" "/home/smeghead/config"
             "XDG_CACHE_HOME" "/home/smeghead/cache"}
        config (config/create-config env)
        state (state/create-state config)]
    (is (= "/home/smeghead/cache/zo3-ja/state-aHR0cDovL2V4YW1wbGUuY29tL2ZlZWQ=.phel" (state/state-filename state "http://example.com/feed")))))

(deftest state-home-test
  (let [env {"HOME" "/home/smeghead"}
        config (config/create-config env)
        state (state/create-state config)]
    (is (= "/home/smeghead/.cache/zo3-ja/state-aHR0cDovL2V4YW1wbGUuY29tL2ZlZWQ=.phel" (state/state-filename state "http://example.com/feed")))))

(deftest state-none-test
  (let [env {}
        config (config/create-config env)
        state (state/create-state config)]
    (is (= "/tmp/zo3-ja/state-aHR0cDovL2V4YW1wbGUuY29tL2ZlZWQ=.phel" (state/state-filename state "http://example.com/feed")))))
